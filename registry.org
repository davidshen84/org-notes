#+TITLE: container registry
#+STARTUP: showall hideblocks

* registry
** TODO tasks [0/1]
- [ ] configure url prefix

** links
- https://hub.docker.com/_/registry

- https://docs.docker.com/registry/configuration/

** define resources
- Deploy a local container registry
- Define a host PVC

#+name: registry
#+begin_src yaml
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: registry-storage
  spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: local-path
    resources:
      requests:
        storage: 10Gi
  ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: registry
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: registry
    template:
      metadata:
        labels:
          app: registry
      spec:
        enableServiceLinks: false
        nodeSelector:
          node-role.kubernetes.io/master: 'true'
        containers:
          - name: registry
            image: registry:2
            ports:
              - containerPort: 5000
            volumeMounts:
              - name: registry
                mountPath: /var/lib/registry
            env:
              - name: REGISTRY_HTTP_ADDR
                value: :5000
              - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
                value: /var/lib/registry
              - name: REGISTRY_HTTP_SECRET
                value: secret
              - name: REGISTRY_LOG_LEVEL
                value: "info"
              # - name: REGISTRY_LOG_ACCESSLOG_DISABLED
              #   value: true
        volumes:
          - name: registry
            persistentVolumeClaim:
              claimName: registry-storage
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: registry
  spec:
    selector:
      app: registry
    ports:
      - protocol: TCP
        port: 5000
        targetPort: 5000
#+end_src

#+begin_src shell :results verbatim :noweb yes
  kubectl --context k3s --namespace default apply --filename - <<EOF
  <<registry>>
  EOF
#+end_src

* istio configuration

** virtual service
#+name: registry-service
#+begin_src yaml
  apiVersion: networking.istio.io/v1beta1
  kind: VirtualService
  metadata:
    name: registry
  spec:
    hosts:
      - registry.default
    gateways:
      - default/gateway
    http:
      -
        match:
          - port: 80
        rewrite:
          authority: registry.default
        route:
          - destination:
              host: registry.default.svc.cluster.local
              port:
                number: 5000
#+end_src

#+begin_src shell :noweb yes
  kubectl apply --namespace default --filename - <<EOF
  <<registry-service>>
  EOF
#+end_src

* docker-registry-browser
https://hub.docker.com/r/klausmeyer/docker-registry-browser/

#+name: registry-browser
#+begin_src yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: registry-browser
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: registry-browser
    template:
      metadata:
        labels:
          app: registry-browser
      spec:
        enableServiceLinks: false
        nodeSelector:
          node-role.kubernetes.io/master: 'true'
        containers:
          - name: registry-browser
            image: klausmeyer/docker-registry-browser:latest
            ports:
              - containerPort: 8080
            env:
              - name: RAILS_RELATIVE_URL_ROOT
                value: /registry-browser/
              - name: SCRIPT_NAME
                value: /registry-browser/
              - name: ENABLE_DELETE_IMAGES
                value: 'true'
              - name: DOCKER_REGISTRY_URL
                value: http://registry.default:5000
  ---
  apiVersion: v1
  kind: Service
  metadata:
    name: registry-browser
  spec:
    selector:
      app: registry-browser
    ports:
      - protocol: TCP
        port: 8080
        targetPort: 8080
#+end_src

#+begin_src shell :noweb yes :results output
  kubectl apply --namespace default --filename - --dry-run=server <<EOF
  <<registry-browser>>
  EOF
#+end_src

#+name: registry-browser-service
#+begin_src yaml
  apiVersion: networking.istio.io/v1beta1
  kind: VirtualService
  metadata:
    name: registry-browser
  spec:
    hosts:
      - wsl.local
    gateways:
      - default/gateway
    http:
      - match:
          - uri:
              prefix: /registry-browser/
        rewrite:
          uri: /
        route:
          - destination:
              host: registry-browser.default.svc.cluster.local
              port:
                number: 8080
#+end_src

#+begin_src shell :noweb yes :results output
  kubectl apply --namespace default --filename - --dry-run=server <<EOF
  <<registry-browser-service>>
  EOF
#+end_src

* docker service

Do not use proxy when pushing to this container registry.

**example of setting docker engine proxy**
#+begin_src conf :tangle /sudo::/etc/systemd/system/docker.service.d/http-proxy.conf :comments link
  [Service]
  Environment="HTTP_PROXY=http://localhost:3128"
  Environment="HTTPS_PROXY=http://localhost:3128"
  Environment="NO_PROXY=localhost,127.0.0.1,.default,.local,172.20.171.190"
#+end_src
